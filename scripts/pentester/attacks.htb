REQUIRE_MODULE LUA

BLOCK:LUA readFile name : ret 
  assert(io.input(name))
  local buf = io.read("*all")
  return buf
END

BLOCK attack host port url name code expect
  _MILESTONE $name
    _CODER:URLENC VAR(code) urlenc
    _REQ $host $port
    __GET ${url}?param=${urlenc} HTTP/1.1
    __Host: $host:$port
    __Accept: text/html
    __User-Agent: httest/2.4.2 
    __
    _EXPECT headers "$expect"
    _WAIT

    _REQ $host $port
    __GET ${url}?${urlenc}=foo HTTP/1.1
    __Host: $host:$port
    __Accept: text/html
    __User-Agent: httest/2.4.2 
    __
    _EXPECT headers "$expect"
    _WAIT

    _REQ $host $port
    __POST $url HTTP/1.1
    __Host: $host:$port
    __Content-Length: AUTO
    __Content-Type: application/x-www-form-urlencoded
    __Accept: text/html
    __User-Agent: httest/2.4.2 
    __
    _-param=$urlenc
    _EXPECT headers "$expect"
    _WAIT

    _REQ $host $port
    __POST $url HTTP/1.1
    __Host: $host:$port
    __Content-Length: AUTO
    __Content-Type: application/x-www-form-urlencoded
    __Accept: text/html
    __User-Agent: httest/2.4.2 
    __
    _-${urlenc}=fooo
    _EXPECT headers "$expect"
    _WAIT
  _END
END

BLOCK runAttacks type host port url attackerFile
  _AUTO_CLOSE on
  _REQ $host $port
  __GET $url?foo=bar&bla=fasel HTTP/1.1
  __Host: $host:$port
  __Accept: text/html
  __User-Agent: httest/2.4.2 
  __
  _EXPECT headers "HTTP/1.1 200"
  _WAIT

  _REQ $host $port
  __POST $url HTTP/1.1
  __Host: $host:$port
  __Content-Length: AUTO
  __Content-Type: application/x-www-form-urlencoded
  __Accept: text/html
  __User-Agent: httest/2.4.2 
  __
  _-foo=bar&bla=fasel
  _EXPECT headers "HTTP/1.1 200"
  _WAIT

  readFile "$attackerFile" BUF 
  _XML:PARSE VAR(BUF)
  _XML:XPATH count(/${type}/attack) count 
  _LOOP $count i=1
    _XML:XPATH /${type}/attack[$i]/name name 
    _XML:XPATH /${type}/attack[$i]/code code 
    attack $host $port $url VAR(name) VAR(code) "HTTP/1.1 403"
  _END
END

