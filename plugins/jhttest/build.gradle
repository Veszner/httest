/*
* Copyright (c) 2011 the original author or authors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'

import org.gradle.api.XmlProvider
import org.gradle.api.artifacts.maven.MavenDeployment

group = 'org.sf.htt'
version = '2.3.3'
ext.packaging = 'jar'

repositories {
	    mavenCentral()
}

dependencies {
	    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
		compile group: 'junit', name: 'junit', version: '4.+'
}

def isDevBuild
def isCiBuild
def isReleaseBuild

def sonatypeRepositoryUrl

//set build variables based on build type (release, continuous integration, development)
if(hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
}

//********* artifact signing *********
if(isReleaseBuild) {
    signing {
        sign configurations.archives
    }
} else {
    task signArchives {
        // do nothing
    }
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                  authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                   name 'jhttest'
                   packaging 'jar'
                   description 'jhttest is a junit runner to run native httest in java (eclipse/ant/...)'
                   url 'http://htt.sourceforge.net/'

                   scm {
                       url 'https://sourceforge.net/p/htt/git/ci/master/tree/plugins/jhttest/'
                   }

                   licenses {
                       license {
                           name 'The Apache Software License, Version 2.0'
                           url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                           distribution 'repo'
                       }
                   }

                   developers {
                       developer {
                           id 'ia97lies'
                           name 'Christian Liesch'
                       }
                   }
               }
            }
        }
    }
}
