HTTEST 2.1
----------
This is experimental code. The stable code is in the branche httest-2.0.

Do restructure the code base to make it readable and extentable. This is a 
preparation for httest3 test microkernel.


DATA FLOW FRAMEWORK
-------------------

Simple Data Flow Object
-----------------------
data_flow_t
  object_object_register
  object_unobject_register
  object_find
  user_data_set
  user_data_get
  connect
  close
  accept
  read
  readln
  write
  writeln

  ^  
  |
  +-------+-------+-------+-------+
  |       |       |       |       |
 tcp_t   ssl_t  reader_t http_t  .... 
              

Connect them together
---------------------
reader->object_register("cache", cache);
cache->object_register("ssl", ssl);
ssl->object_register("socket", socket);

or that way

reader->object_register("socket", socket);
reader->object_register("ssl", socket);
reader->object_register("cache", socket);

Bind User Data to Object
------------------------
reader->user_data_set(reader, worker);
worker_t *worker = reader->user_data_get(reader);

Function Call Flow
------------------
reader->connect() --> cache->connect --> ssl->connect() --> socket->connect()
reader->read() --> cache->read() --> ssl->read() --> socket->read()

Function Signatures
-------------------
status = reader->connect(reader);
status = reader->accept(reader);
status = reader->read(reader, brigade, len);
status = reader->readln(reader, brigade);
status = reader->write(reader, brigade);
status = reader->writeln(reader, brigade);

HTTP Object
-----------
status = http->read(http, brigade, len);
status = http->write(http, brigade);

Remove an Object in the Chain
-----------------------------
data_flow_t *ssl = http->object_find("ssl");
status = ssl->close(ssl);
http->object_unregister(ssl);

