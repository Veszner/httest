= SYNTAX =


== General ==
command = capital-letters
args = chars
global-call = command args* newline
local-call = "_"command { args } newline
global-body = global-call newline { local-call } END newline
local-body = local-call newline { local-call } _END newline

BLOCK[:extention] name { parameter } : { return-values }
extention: LUA, BODY
name = chars
paramtert = chars
return-values = chars

=== Example ===
# ----------------
BLOCK:BODY _myIf body regex value
  _IF "value" MATCH "regex"
    _CALL body
  _END
END

CLIENT
  _myIf ".*" "foo"
    _DEBUG hallo
  _END
END

# ----------------
GLOBAL_CALLS

GLOBAL_BODY <args>
...
_LOCAL_CALLS <args>
...
_LOCAL_BODY <args>
...
_END LOCAL_BODY
...
END

== BLOCK ==
BLOCK <name>
END

_CALL <name>

or

_<name>

Overwrite existent calls shoult be possible. But with in a BLOCK it should be
also possible to call the parent instead of overwritten calls.


== ICAP Support ==
_REQ foobar 80
__ICAP /foo/bar ICAP/1.0
__Host: foobar
__Blafasel: blablabla
__Encapsulated: req-hdr: 0, null-body: AUTO 
__
__GET /foobar HTTP/1.1
__Host: blafasel
__Content-Type: text/html
__

oder

_REQ foobar 80
__ICAP /foo/bar ICAP/1.0
__Host: foobar
__Blafasel: blablabla
__Encapsulated: req-hdr: 0, res-hdr: AUTO, res-body: AUTO
__
__GET /foobar HTTP/1.1
__Host: blafasel
__Content-Type: text/html
__
__HTTP/1.1 500 Internal Server Error
__Content-Length: AUTO
__
__==OK==


